{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","headers","querySelectorAll","tableBody","sortColumn","index","isASC","sortedRows","Array","from","rows","sort","a","b","first","cells","innerHTML","second","salaryToNumber","localeCompare","tBodies","append","text","slice","replace","pushNotification","posTop","posRight","title","description","type","body","insertAdjacentHTML","notification","setTimeout","remove","forEach","header","dataset","sorted","addEventListener","e","order","target","form","button","formValidation","personName","personPosition","personAge","personSalary","value","trim","length","nameStyle","style","borderColor","positionStyle","ageStyle","salaryStyle","saveDataToTable","position","office","age","salary","tr","createElement","numberWithComma","x","toString","unselectTable","classList","preventDefault","reset","row","contains","closest","toggle","trows","input","findIndex","n","tempValue","innerText","placeholder","focus","onblur","inputValidation","evt","code","i"],"mappings":"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","file":"main.4c282383.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tableBody = table.querySelector('tbody');\n\nheaders.forEach((header) => {\n  header.dataset.sorted = 'DESC';\n});\n\nfunction sortColumn(index, isASC) {\n  let sortedRows = [];\n\n  sortedRows = Array.from(tableBody.rows).sort((a, b) => {\n    const first = a.cells[index].innerHTML;\n    const second = b.cells[index].innerHTML;\n\n    if (isASC) {\n      return index === 4\n        ? (salaryToNumber(first) - salaryToNumber(second))\n        : first.localeCompare(second);\n    } else {\n      return index === 4\n        ? (salaryToNumber(second) - salaryToNumber(first))\n        : second.localeCompare(first);\n    }\n  });\n\n  table.tBodies[0].append(...sortedRows);\n}\n\nfunction salaryToNumber(text) {\n  return +text.slice(1).replace(/,/g, '');\n};\n\nheaders.forEach(function(header, index) {\n  header.addEventListener('click', (e) => {\n    let order;\n\n    if (e.target.dataset.sorted === 'ASC') {\n      e.target.dataset.sorted = 'DESC';\n      order = false;\n    } else {\n      e.target.dataset.sorted = 'ASC';\n      order = true;\n    }\n    sortColumn(index, order);\n  });\n});\n\nfunction pushNotification(posTop, posRight, title, description, type) {\n  document.body.insertAdjacentHTML('afterbegin', `\n    <div data-qa=\"notification\" class=\"notification ${type}\"\n      style=\"top: ${posTop}px; right: ${posRight}px;\">\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    </div>\n    `);\n\n  const notification = document.querySelector('.notification');\n\n  setTimeout(() => notification.remove(), 2000);\n}\n\ntable.insertAdjacentHTML('afterend', `\n  <form class=\"new-employee-form\">\n    <label>Name: \n      <input\n        data-qa=\"name\"\n        name=\"name\"\n        type=\"text\"\n        required\n      >\n    </label>\n    <label>Position: \n      <input\n        data-qa=\"position\"\n        name=\"position\"\n        type=\"text\"\n        required\n      >\n    </label>\n    <label>Office: \n      <select data-qa=\"office\" name=\"office\" type=\"text\">\n        <option disabled selected value=\"\" hidden></option>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age: \n      <input\n        data-qa=\"age\"\n        name=\"age\"\n        type=\"number\"\n        required\n      >\n    </label>\n    <label>Salary: \n      <input\n        data-qa=\"salary\"\n        name=\"salary\"\n        type=\"number\"\n        required\n      >\n    </label>\n    <button>Save to table</button>\n  </form>\n `);\n\nconst form = document.querySelector('.new-employee-form');\n\nconst button = form.querySelector('button');\n\nbutton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const personName = form.querySelector('[data-qa=\"name\"]');\n  const position = form.querySelector('[data-qa=\"position\"]');\n  const office = form.querySelector('[data-qa=\"office\"]');\n  const age = form.querySelector('[data-qa=\"age\"]');\n  const salary = form.querySelector('[data-qa=\"salary\"]');\n\n  if (formValidation(personName, position, age, salary)) {\n    saveDataToTable(personName, position, office, age, salary);\n    form.reset();\n    unselectTable();\n  };\n});\n\nfunction formValidation(personName, personPosition, personAge, personSalary) {\n  if (personName.value.trim().length < 4) {\n    const nameStyle = form.querySelector('[data-qa=\"name\"]');\n\n    nameStyle.style.borderColor = '#e25644';\n\n    setTimeout(() => {\n      nameStyle.style.borderColor = '';\n    }, 2000);\n\n    pushNotification(450, 20, 'Something went wrong',\n      `Name: less than 4 characters`, 'error');\n\n    return false;\n  }\n\n  if (personPosition.value.trim().length < 1) {\n    const positionStyle = form.querySelector('[data-qa=\"position\"]');\n\n    positionStyle.style.borderColor = '#e25644';\n\n    setTimeout(() => {\n      positionStyle.style.borderColor = '';\n    }, 2000);\n\n    pushNotification(450, 20, 'Something went wrong',\n      `Position: cannot be empty`, 'error');\n\n    return false;\n  }\n\n  if (personAge.value < 18\n    || personAge.value > 90) {\n    const ageStyle = form.querySelector('[data-qa=\"age\"]');\n\n    ageStyle.style.borderColor = '#e25644';\n\n    setTimeout(() => {\n      ageStyle.style.borderColor = '';\n    }, 2000);\n\n    pushNotification(450, 20, 'Something went wrong',\n      'Age: must be between 18 and 90', 'error');\n\n    return false;\n  }\n\n  if (personSalary.value.length < 1 || personSalary.value < 0) {\n    const salaryStyle = form.querySelector('[data-qa=\"salary\"]');\n\n    salaryStyle.style.borderColor = '#e25644';\n\n    setTimeout(() => {\n      salaryStyle.style.borderColor = '';\n    }, 2000);\n\n    pushNotification(450, 20, 'Something went wrong',\n      `Saary cannot be empty or negative`, 'error');\n\n    return false;\n  }\n\n  pushNotification(450, 20, 'Wow - this is a success',\n    'New data is added to the table', 'success');\n\n  return true;\n};\n\nfunction saveDataToTable(personName, position, office, age, salary) {\n  const tr = document.createElement('tr');\n\n  tr.innerHTML = `\n     <td>${personName.value}</td>\n     <td>${position.value}</td>\n     <td>${office.value}</td>\n     <td>${age.value}</td>\n     <td>$${numberWithComma(salary.value)}</td>\n   `;\n\n  tableBody.append(tr);\n};\n\nfunction numberWithComma(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nfunction unselectTable() {\n  const trows = tableBody.querySelectorAll('tr');\n\n  trows.forEach((tr) => {\n    tr.classList.remove('active');\n  });\n};\n\ntableBody.addEventListener('click', (e) => {\n  const row = e.target;\n\n  if (!row || !tableBody.contains(row)) {\n    return;\n  }\n\n  unselectTable();\n  row.closest('tr').classList.toggle('active');\n});\n\ntableBody.addEventListener('dblclick', (e) => {\n  const row = e.target;\n\n  if (!row || !tableBody.contains(row)) {\n    return;\n  }\n\n  const trows = tableBody.querySelectorAll('td');\n  const index = Array.from(trows).findIndex(n => n === row) % 5;\n  const tempValue = row.innerText;\n  let input;\n\n  switch (index) {\n    case 1:\n      input = document.createElement('input');\n      input.type = 'text';\n      break;\n    case 2:\n      input = document.createElement('select');\n\n      input.innerHTML = `\n         <select>\n          <option disabled selected value=\"\" hidden></option>\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Singapore\">Singapore</option>\n          <option value=\"London\">London</option>\n          <option value=\"New York\">New York</option>\n          <option value=\"Edinburgh\">Edinburgh</option>\n          <option value=\"San Francisco\">San Francisco</option>\n         </select>\n       `;\n      break;\n    case 3:\n      input = document.createElement('input');\n      input.type = 'number';\n      input.placeholder = 'age value 18 - 90';\n      break;\n    case 4:\n      input = document.createElement('input');\n      input.type = 'number';\n      input.placeholder = 'just a number';\n      break;\n    default:\n      input = document.createElement('input');\n      input.type = 'text';\n  }\n\n  row.innerText = '';\n  row.append(input);\n  input.focus();\n\n  input.onblur = () => {\n    inputValidation(index);\n  };\n\n  input.addEventListener('keydown', (evt) => {\n    if (evt.code !== 'Enter') {\n      return;\n    }\n\n    inputValidation(index);\n  });\n\n  const inputValidation = (i) => {\n    if (!input.value) {\n      // eslint-disable-next-line no-return-assign\n      return row.innerText = tempValue;\n    }\n\n    switch (i) {\n      case 0:\n        if (input.value.trim().length < 4) {\n          row.innerText = tempValue;\n\n          pushNotification(450, 20, 'Something went wrong',\n            `Name: less than 4 characters`, 'error');\n          break;\n        }\n        row.innerText = input.value;\n        break;\n      case 1:\n        if (input.value.trim().length < 1) {\n          row.innerText = tempValue;\n\n          pushNotification(450, 20, 'Something went wrong',\n            `Position: cannot be empty`, 'error');\n          break;\n        }\n        row.innerText = input.value;\n        break;\n      case 3:\n        if (input.value < 18 || input.value > 90) {\n          row.innerText = tempValue;\n\n          pushNotification(450, 20, 'Something went wrong',\n            'Age must be between 18 and 90', 'error');\n          break;\n        }\n        row.innerText = input.value;\n        break;\n      case 4:\n        if (input.value < 0) {\n          row.innerText = tempValue;\n\n          pushNotification(450, 20, 'Something went wrong',\n            'Check that the data you entered is correct', 'error');\n          break;\n        }\n        row.innerText = `$${numberWithComma(input.value)}`;\n        break;\n      default:\n        row.innerText = input.value;\n    }\n    input.remove();\n  };\n});\n"]}